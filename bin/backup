#!/bin/bash

# version: 20190812
# NOTE: if the file/dir name starts with '.', this script removes the starting dot

[ "$1" == "" ] && echo -e "Usage: backup [PATH] \n[PATH] is the filename or directory to backup" &&  exit;

[ ! -e $1 ] && echo -e "$1 doesn't exist" && exit;

# ${1%/} removes the last char if it's a slash
# To remove the last char (whatever it is) use ${1%?} 
BACKUP=${1%/}-$(date +%Y%m%d);

# Remove starting dot from backup file
BACKUP=$(echo $BACKUP | sed -e 's/^\.//')

if [ "$2" != "" ]; then  # save the backup file to the given directory ($2)		
  FILENAME=$(echo $BACKUP | sed -e 's/.*\///');
  BACKUP=${2%/}/$FILENAME;
fi

# BACKUP_FILE=$BACKUP.tgz;
BACKUP_FILE=$BACKUP.zip;
if [ -f $BACKUP_FILE ]  # When BACKUP already exists, add current time to the filename
then 
  BACKUP_FILE=$BACKUP"_"$(date +%H%M%S)".zip";
fi

# CMD="tar -zcf $BACKUP_FILE $1";
CMD="zip -rq $BACKUP_FILE $1";
#echo $CMD;
$CMD;
chmod 400 $BACKUP_FILE

if [ "$?" != "0" ]; then
	echo -e "Couldn't perform the backup, see the error above.";
else
	echo -e "Backup of $1 stored in $BACKUP_FILE";
	du -h $BACKUP_FILE;
fi

